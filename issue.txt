
Your! order has been booked! We will contact you soon.

loader on every category change
out of stock order not checkout

change splash

Home
CategoriesHome Ok
Categories **static getDerivedStateFromProps(props, state) {**
CategoriesSideBar Ok
CategoriesBox Ok
ChildCategories 
ChildCategoriesSideBar Ok


/////////////////////////////////////////////
using axios instead fetch ************************

axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });

  axios({
  method: 'post',
  url: '/user/12345',
  data: {
    firstName: 'Fred',
    lastName: 'Flintstone'
  }
});

 // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },

   validateStatus: function (status) {
    return status >= 200 && status < 300; // default
  },

  axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // The request was made and the server responded with a status code
      // that falls out of the range of 2xx
      console.log(error.response.data);
      console.log(error.response.status);
      console.log(error.response.headers);
    } else if (error.request) {
      // The request was made but no response was received
      // `error.request` is an instance of XMLhttpsRequest in the browser and an instance of
      // https.ClientRequest in node.js
      console.log(error.request);
    } else {
      // Something happened in setting up the request that triggered an Error
      console.log('Error', error.message);
    }
    console.log(error.config);
  });


  const params = new URLSearchParams();
params.append('param1', 'value1');
params.append('param2', 'value2');
axios.post('/foo', params);